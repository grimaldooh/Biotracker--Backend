spring.application.name=backend
server.port=8080

# Database Configuration - AWS RDS
spring.datasource.url=jdbc:postgresql://${AWS_RDS_ENDPOINT}:5432/${AWS_RDS_DATABASE}
spring.datasource.username=${AWS_RDS_USERNAME}
spring.datasource.password=${AWS_RDS_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration for Production
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Connection Pool optimized for AWS RDS
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# AWS Configuration
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME}
aws.region=${AWS_REGION}
aws.access-key=${AWS_ACCESS_KEY}
aws.secret-key=${AWS_SECRET_KEY}

# OpenAI Configuration
openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.model=gpt-4o-mini
openai.max-tokens=4096
openai.temperature=0.3

# JWT Configuration
app.jwt.secret=${JWT_SECRET}
app.jwt.expiration=86400000

# Security
server.error.include-stacktrace=never
server.error.include-message=never

# Logging for production
logging.level.com.biotrack=INFO
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN